{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/generate/generate.component.ts","webpack:///src/app/generate/generate.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/piano-info/piano-info.component.ts","webpack:///src/app/piano-info/piano-info.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","GenerateComponent","instruments","NavbarComponent","PianoInfoComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"AboutHeader\">\r\n  About The Music Generator\r\n</header>\r\n<p></p>\r\n<p>\r\n  Welcome to my music generator website. I've been interesting in machine learning and I'm starting to get into more advanced topics like nueral networks.\r\n  I trained a model using nueral network techniques to be able to generate piano music. All of the piano music should be original because the model is\r\n  creating it for the first time. I hope to be able to train a model that can produce music with multiple instruments at the same time like an orchestra.\r\n  But it's a work in progress. I hope you enjoy listening to never before heard music!\r\n</p>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { GenerateComponent } from './generate/generate.component';\nimport { AboutComponent } from './about/about.component';\nimport { PianoInfoComponent } from './piano-info/piano-info.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/generate', pathMatch: 'full' },\n  { path: 'generate', component: GenerateComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'piano-info', component: PianoInfoComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'website';\n}\n","<navbar></navbar>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { AboutComponent } from './about/about.component';\nimport { GenerateComponent } from './generate/generate.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PianoInfoComponent } from './piano-info/piano-info.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    AboutComponent,\n    GenerateComponent,\n    PianoInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-generate',\n  templateUrl: './generate.component.html',\n  styleUrls: ['./generate.component.css']\n})\nexport class GenerateComponent implements OnInit {\n  instruments = [\"Piano\", \"Coming Soon\"]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"Title\">Welcome to Music Generator</header>\r\n<p></p>\r\n<header class=\"Instructions\">Instructions</header>\r\n<p>\r\n  Select the type of music/instrument you would like to hear from the drop down box. \r\n  Then click on the generate button. \r\n  Next click on play and listen to the magic happen.\r\n</p>\r\n<p></p>\r\n\r\n<div>\r\n  <header>Types of Music</header>\r\n  <select>\r\n    <option [value]=\"\" disabled selected hidden>Select a music style</option>\r\n    <option *ngFor=\"let ins of instruments\">{{ins}}</option>\r\n  </select>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"navbar navbar-default\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"navbar-header\">\r\n      <a class=\"navbar-brand\">Music Generator</a>\r\n    </div>\r\n\r\n    <div class=\"collapse navbar-collapse\">\r\n      <ul class=\"nav navbar-nav\">\r\n        <li>\r\n          <a routerLink=\"generate\" routerLinkActive=\"active\">Generator</a>\r\n        </li>\r\n        <li><a routerLink=\"about\" routerLinkActive=\"active\">About</a></li>\r\n        <li class=\"dropdown\">\r\n          <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n            Instrument Information\r\n            <span class=\"caret\"></span>\r\n          </a>\r\n          <ul class=\"dropdown-menu\">\r\n            <li>\r\n              <a routerLink=\"piano-info\">Piano</a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-piano-info',\n  templateUrl: './piano-info.component.html',\n  styleUrls: ['./piano-info.component.css']\n})\nexport class PianoInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"PianoInfo\">\r\n  Piano Information\r\n</header>\r\n<p></p>\r\n<p>\r\n  Information about the piano goes here\r\n</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}